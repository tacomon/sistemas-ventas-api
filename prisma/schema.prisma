// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://admin:papasyhuevo@sistema-ventas.chkywoe2qfde.us-east-1.rds.amazonaws.com:3306/sistema-ventas"
}
//comando
//npx prisma generate

model Rol {
  cveRol Int @id @default(autoincrement())
  descripcion String @db.VarChar(250)
  clave String @db.VarChar(45)
  activo Boolean @db.TinyInt()

  Usuario Usuario[]

  @@map("rol")
}

model Usuario {
  cveUsuario Int @id @default(autoincrement())
  nombre String
  apellidos String
  username String @unique 
  password String
  fechaRegistro DateTime @default(now())
  cveRol Int
  rol Rol @relation(fields: [cveRol], references: [cveRol])

  @@map("tbl_usuario")
}



// model Usuario {
//   cveUsuario    Int      @id @default(autoincrement())
//   nombre        String   @db.VarChar(350)
//   apellidos     String   @db.VarChar(450)
//   username      String   @db.VarChar(150)
//   password      String   @db.VarChar(350)
//   fechaRegistro DateTime @default(now())
//   rol           Rol      @relation(fields: [cveRol], references: [cveRol])
//   cveRol        Int
//   ventas        Venta[]
//   @@map("tbl_usuario")
// }

// model Rol {
//   cveRol      Int       @id @default(autoincrement())
//   descripcion String    @db.VarChar(250)
//   clave       String?   @db.VarChar(45)
//   activo      Boolean
//   usuarios    Usuario[]
//   @@map("rol")
// // }
// model Categoria {
//   cveCategoria Int        @id @default(autoincrement())
//   descripcion  String     @db.VarChar(250)
//   activo       Boolean
//   productos    Producto[]
//   @@map("categoria")
// }

// model Producto {
//   cveProducto   Int             @id @default(autoincrement())
//   descripcion   String          @db.VarChar(350)
//   precio        Float
//   cantidad      Int?
//   cveCategoria  Int
//   categoria     Categoria       @relation(fields: [cveCategoria], references: [cveCategoria])
//   detalleVentas DetalleVenta[]
//   @@map("producto")
// }

// model Venta {
//   cveVenta     Int            @id @default(autoincrement())
//   totalVenta   Float
//   fechaVenta   DateTime
//   cveUsuario   Int
//   usuario      Usuario        @relation(fields: [cveUsuario], references: [cveUsuario])
//   detalleVenta DetalleVenta[]
//   @@map("venta")
// }

// model DetalleVenta {
//   cveDetalleVenta Int      @id @default(autoincrement())
//   cantidad        Int
//   precioProducto  Float
//   cveProducto     Int
//   producto        Producto @relation(fields: [cveProducto], references: [cveProducto])
//   cveVenta        Int
//   venta           Venta    @relation(fields: [cveVenta], references: [cveVenta])
//   @@map("detalle_venta")
// }

